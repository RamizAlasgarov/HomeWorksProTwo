### Часть 1
1. Преобразовать список чисел в список строк.
2. Отфильтровать список чисел так, чтобы остались только четные числа.
3. Преобразовать список строк в список их длин.
4. Отфильтровать список строк так, чтобы остались только строки, начинающиеся с определенной буквы.
5. Преобразовать список дат в список строк в формате "год-месяц".

### Часть 2
1. Преобразовать список слов в список их анаграмм.
2. Отфильтровать список строк так, чтобы остались только строки, содержащие цифры.
3. Преобразовать список кортежей (имя, возраст) в список строк с описанием (имя is в возраст год(а/лет)).
4. Отфильтровать список чисел так, чтобы остались только числа, делящиеся на все свои цифры без остатка.

### Часть 3
1. Преобразовать список словарей в список строк JSON, содержащих определенные ключи.
2. Отфильтровать список строк так, чтобы остались только строки, которые являются палиндромами.
3. Преобразовать список предложений в список кортежей (число слов, предложение).
4. Отфильтровать список сложных структур данных (например, деревьев) так, чтобы остались только те, у которых определенное свойство имеет определенное значение.

## Ещё задачи. Всё вместе

1. Найти среднее значение списка чисел.
2. Отфильтровать список строк по заданному условию.
3. Посчитать количество элементов в списке.

```java
List<String> strings = List.of("apple", "banana", "cherry", "date", "elderberry");
long count = strings.stream().count();
System.out.println("Количество элементов в списке: " + count);
```
4. Преобразовать список строк в верхний регистр.
5. Найти максимальный элемент в числовом списке.
6. Убрать дубликаты из списка.
7. Выбрать первые N элементов списка.
8. Проверить, все ли элементы списка удовлетворяют определенному условию.
9. Объединить несколько списков в один.
10. Отсортировать список строк.
11. Преобразовать список строк в мапу, где ключом будет строка, а значением - длина строки.

```java
List<String> strings = List.of("apple", "banana", "cherry", "date", "elderberry");

Map<String, Integer> stringLengthMap = strings.stream()
        .collect(Collectors.toMap(
                e -> e,
                e -> e.length()));

stringLengthMap.forEach((key, value) -> System.out.println(key + ": " + value));

```

12. Найти минимальный элемент в числовом списке.
13. Посчитать сумму всех элементов в числовом списке.
14. Разделить список на части заданного размера.
15. Проверить, есть ли хотя бы один элемент, удовлетворяющий заданному условию.
16. Пропустить первые N элементов списка.
17. Посчитать сумму длин строк в списке.
18. Проверить, есть ли дубликаты в списке.
19. Преобразовать список чисел в список квадратов этих чисел.
20. Найти самую длинную строку в списке.
21. Объединить элементы списка в одну строку с разделителем.
22. Проверить, все ли строки в списке начинаются с определенной буквы.

```java

List<String> strings = List.of("apple", "banana", "cherry", "date", "elderberry");

char startingChar = 'a';

boolean allStartWithA = strings.stream()
        .allMatch(str -> str.toLowerCase().startsWith(String.valueOf(startingChar)));

if (allStartWithA) {
    System.out.println("Все строки начинаются с буквы '" + startingChar + "'");
} else {
    System.out.println("Не все строки начинаются с буквы '" + startingChar + "'");
}

```
23. Удалить элементы списка, не удовлетворяющие заданному условию.
24. Посчитать количество элементов с определенным значением.
25. Объединить значения всех элементов списка, начинающихся с определенной буквы.
26. Проверить, все ли строки в списке состоят из цифр.
27. Оставить только уникальные элементы из нескольких списков.
28. Преобразовать список объектов в список их идентификаторов.
29. Посчитать количество строк с определенной длиной.
30. Проверить, все ли элементы списка являются положительными чис